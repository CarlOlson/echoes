// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var ComponentHolder_$Example_$Animal = function() { };
ComponentHolder_$Example_$Animal.__name__ = ["ComponentHolder_Example_Animal"];
var ComponentHolder_$Example_$Position = function() { };
ComponentHolder_$Example_$Position.__name__ = ["ComponentHolder_Example_Position"];
var ComponentHolder_$Example_$Sprite = function() { };
ComponentHolder_$Example_$Sprite.__name__ = ["ComponentHolder_Example_Sprite"];
var ComponentHolder_$Example_$Velocity = function() { };
ComponentHolder_$Example_$Velocity.__name__ = ["ComponentHolder_Example_Velocity"];
var Example = function() { };
Example.__name__ = ["Example"];
Example.main = function() {
	var canvas = window.document.createElement("code");
	var stat = window.document.createElement("pre");
	window.document.body.appendChild(canvas);
	window.document.body.appendChild(stat);
	var size = Std.parseInt(window.getComputedStyle(window.document.body).fontSize);
	var w = window.innerWidth / size > Example.MAX_WIDTH ? Example.MAX_WIDTH : Math.floor(window.innerWidth / size);
	var h = window.innerHeight / size > Example.MAX_HEIGHT ? Example.MAX_HEIGHT : Math.floor(window.innerHeight / size);
	Example.echo = new echo_Echo();
	Example.echo.addSystem(new Movement(w,h));
	Example.echo.addSystem(new Interaction());
	Example.echo.addSystem(new Render(w,h,size,canvas));
	var _g1 = 0;
	var _g = h;
	while(_g1 < _g) {
		var y = _g1++;
		var _g3 = 0;
		var _g2 = w;
		while(_g3 < _g2) {
			var x = _g3++;
			if(Math.random() > .5) {
				Example.grass(x,y);
			} else if(Math.random() > .2) {
				Example.tree(x,y);
			} else {
				Example.flower(x,y);
			}
		}
	}
	var _g11 = 0;
	var _g4 = Example.RABBITS_POPULATION;
	while(_g11 < _g4) {
		_g11++;
		Example.rabbit(Std.random(w),Std.random(h));
	}
	Example.tiger(Std.random(w),Std.random(h));
	window.setInterval(function() {
		Example.echo.update(.100);
		var _this = Example.echo;
		var ret = "Echo" + (" ( " + _this.systems.length + " )") + (" { " + _this.views.length + " }") + (" [ " + _this.entities.length + " ]");
		ret += "\n  since last update : " + _this.updateStats.get(-10) + " ms";
		ret += "\n  echo total update : " + _this.updateStats.get(-100) + " ms";
		var _g_head = _this.systems.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var s = val;
			ret += "\n    ( " + Type.getClassName(s == null ? null : js_Boot.getClass(s)) + " ) : " + _this.updateStats.get(s.__id) + " ms";
		}
		var _g_head1 = _this.views.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var v = val1;
			ret += "\n  { " + Type.getClassName(v == null ? null : js_Boot.getClass(v)) + (" } [ " + v.entities.length + " ]");
		}
		stat.innerHTML = ret;
	},100);
};
Example.grass = function(x,y) {
	var codes = ["&#x1F33E","&#x1F33F"];
	var _id_ = Example.echo.id();
	ComponentHolder_$Example_$Position.__MAP.h[_id_] = new Vec2(x,y);
	var this1 = ComponentHolder_$Example_$Sprite.__MAP;
	var value = codes[Std.random(codes.length)];
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.innerHTML = value;
	this1.h[_id_] = this2;
	if(Example.echo.entitiesMap.exists(_id_)) {
		var _g_head = Example.echo.views.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val.addIfMatch(_id_);
		}
	}
};
Example.tree = function(x,y) {
	var codes = ["&#x1F332","&#x1F333"];
	var _id_ = Example.echo.id();
	ComponentHolder_$Example_$Position.__MAP.h[_id_] = new Vec2(x,y);
	var this1 = ComponentHolder_$Example_$Sprite.__MAP;
	var value = codes[Std.random(codes.length)];
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.innerHTML = value;
	this1.h[_id_] = this2;
	if(Example.echo.entitiesMap.exists(_id_)) {
		var _g_head = Example.echo.views.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val.addIfMatch(_id_);
		}
	}
};
Example.flower = function(x,y) {
	var codes = ["&#x1F337","&#x1F339","&#x1F33B"];
	var _id_ = Example.echo.id();
	ComponentHolder_$Example_$Position.__MAP.h[_id_] = new Vec2(x,y);
	var this1 = ComponentHolder_$Example_$Sprite.__MAP;
	var value = codes[Std.random(codes.length)];
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.innerHTML = value;
	this1.h[_id_] = this2;
	if(Example.echo.entitiesMap.exists(_id_)) {
		var _g_head = Example.echo.views.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val.addIfMatch(_id_);
		}
	}
};
Example.rabbit = function(x,y) {
	var this1 = new Vec2(x,y);
	var vel = Example.randomVelocity(1);
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.innerHTML = "&#x1F407;";
	var _id_ = Example.echo.id();
	ComponentHolder_$Example_$Position.__MAP.h[_id_] = this1;
	ComponentHolder_$Example_$Velocity.__MAP.h[_id_] = vel;
	ComponentHolder_$Example_$Sprite.__MAP.h[_id_] = this2;
	ComponentHolder_$Example_$Animal.__MAP.h[_id_] = Animal.Rabbit;
	if(Example.echo.entitiesMap.exists(_id_)) {
		var _g_head = Example.echo.views.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val.addIfMatch(_id_);
		}
	}
};
Example.tiger = function(x,y) {
	var this1 = new Vec2(x,y);
	var vel = Example.randomVelocity(10);
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.innerHTML = "&#x1F405;";
	var spr = this2;
	spr.style.fontSize = "200%";
	var _id_ = Example.echo.id();
	ComponentHolder_$Example_$Position.__MAP.h[_id_] = this1;
	ComponentHolder_$Example_$Velocity.__MAP.h[_id_] = vel;
	ComponentHolder_$Example_$Sprite.__MAP.h[_id_] = spr;
	ComponentHolder_$Example_$Animal.__MAP.h[_id_] = Animal.Tiger;
	if(Example.echo.entitiesMap.exists(_id_)) {
		var _g_head = Example.echo.views.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val.addIfMatch(_id_);
		}
	}
};
Example.randomVelocity = function(speed) {
	var d = Math.random() * Math.PI * 2;
	return new Vec2(Math.cos(d) * speed,Math.sin(d) * speed);
};
var Vec2 = function(x,y) {
	this.x = x != null ? x : .0;
	this.y = y != null ? y : .0;
};
Vec2.__name__ = ["Vec2"];
Vec2.prototype = {
	__class__: Vec2
};
var Animal = { __ename__ : true, __constructs__ : ["Rabbit","Tiger"] };
Animal.Rabbit = ["Rabbit",0];
Animal.Rabbit.toString = $estr;
Animal.Rabbit.__enum__ = Animal;
Animal.Tiger = ["Tiger",1];
Animal.Tiger.toString = $estr;
Animal.Tiger.__enum__ = Animal;
var echo_System = function() {
	this.__id = -1;
};
echo_System.__name__ = ["echo","System"];
echo_System.prototype = {
	activate: function(echo1) {
		this.echo = echo1;
	}
	,update: function(dt) {
	}
	,__class__: echo_System
};
var Movement = function(w,h) {
	echo_System.call(this);
	this.__id = 1;
	this.w = w;
	this.h = h;
};
Movement.__name__ = ["Movement"];
Movement.__super__ = echo_System;
Movement.prototype = $extend(echo_System.prototype,{
	update: function(dt) {
		var _g_vd;
		var _g_i;
		var list = this.bodies.entities;
		_g_i = -1;
		_g_vd = new ViewData_$Example_$Position_$Example_$Velocity();
		while(++_g_i < list.length) {
			_g_vd.id = list[_g_i];
			_g_vd.pos = ComponentHolder_$Example_$Position.__MAP.get(_g_vd.id);
			_g_vd.vel = ComponentHolder_$Example_$Velocity.__MAP.get(_g_vd.id);
			_g_vd.pos.x += _g_vd.vel.x * dt;
			_g_vd.pos.y += _g_vd.vel.y * dt;
			if(_g_vd.pos.x >= this.w) {
				_g_vd.pos.x -= this.w;
			}
			if(_g_vd.pos.x < 0) {
				_g_vd.pos.x += this.w;
			}
			if(_g_vd.pos.y >= this.h) {
				_g_vd.pos.y -= this.h;
			}
			if(_g_vd.pos.y < 0) {
				_g_vd.pos.y += this.h;
			}
		}
	}
	,activate: function(echo1) {
		if(!echo1.viewsMap.h.hasOwnProperty(1)) {
			echo1.addView(new View_$Example_$Position_$Example_$Velocity());
		}
		this.bodies = echo1.viewsMap.h[1];
		echo_System.prototype.activate.call(this,echo1);
	}
	,__class__: Movement
});
var Render = function(w,h,size,canvas) {
	echo_System.call(this);
	this.__id = 2;
	this.world = [];
	var _g1 = 0;
	var _g = h;
	while(_g1 < _g) {
		var y = _g1++;
		this.world[y] = [];
		var _g3 = 0;
		var _g2 = w;
		while(_g3 < _g2) {
			var x = _g3++;
			var span = window.document.createElement("span");
			span.style.position = "absolute";
			span.style.left = "" + x * size + "px";
			span.style.top = "" + y * size + "px";
			this.world[y][x] = span;
			canvas.appendChild(span);
		}
		canvas.appendChild(window.document.createElement("br"));
	}
};
Render.__name__ = ["Render"];
Render.__super__ = echo_System;
Render.prototype = $extend(echo_System.prototype,{
	appendVisual: function(id) {
		this.world[ComponentHolder_$Example_$Position.__MAP.h[id].y | 0][ComponentHolder_$Example_$Position.__MAP.h[id].x | 0].appendChild(ComponentHolder_$Example_$Sprite.__MAP.h[id]);
	}
	,removeVisual: function(id) {
		ComponentHolder_$Example_$Sprite.__MAP.h[id].remove();
	}
	,updateDynamicVisual: function(dt,vel,pos,spr) {
		this.world[pos.y | 0][pos.x | 0].appendChild(spr);
	}
	,update: function(dt) {
		var _g_vd;
		var _g_i;
		var list = this.view_example_position_example_sprite_example_velocity.entities;
		_g_i = -1;
		_g_vd = new ViewData_$Example_$Position_$Example_$Sprite_$Example_$Velocity();
		while(++_g_i < list.length) {
			_g_vd.id = list[_g_i];
			_g_vd.pos = ComponentHolder_$Example_$Position.__MAP.get(_g_vd.id);
			_g_vd.spr = ComponentHolder_$Example_$Sprite.__MAP.get(_g_vd.id);
			_g_vd.vel = ComponentHolder_$Example_$Velocity.__MAP.get(_g_vd.id);
			this.updateDynamicVisual(dt,_g_vd.vel,_g_vd.pos,_g_vd.spr);
		}
	}
	,activate: function(echo1) {
		if(!echo1.viewsMap.h.hasOwnProperty(2)) {
			echo1.addView(new View_$Example_$Position_$Example_$Sprite());
		}
		this.visuals = echo1.viewsMap.h[2];
		if(!echo1.viewsMap.h.hasOwnProperty(3)) {
			echo1.addView(new View_$Example_$Position_$Example_$Sprite_$Example_$Velocity());
		}
		this.view_example_position_example_sprite_example_velocity = echo1.viewsMap.h[3];
		this.visuals.onAdded.push($bind(this,this.appendVisual));
		var _g = 0;
		var _g1 = this.visuals.entities;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			this.appendVisual(i);
		}
		this.visuals.onRemoved.push($bind(this,this.removeVisual));
		echo_System.prototype.activate.call(this,echo1);
	}
	,__class__: Render
});
var Interaction = function() {
	echo_System.call(this);
	this.__id = 3;
};
Interaction.__name__ = ["Interaction"];
Interaction.__super__ = echo_System;
Interaction.prototype = $extend(echo_System.prototype,{
	update: function(dt) {
		var del = [];
		var _g_vd;
		var _g_i;
		var list = this.animals.entities;
		_g_i = -1;
		_g_vd = new ViewData_$Example_$Animal_$Example_$Position();
		while(++_g_i < list.length) {
			_g_vd.id = list[_g_i];
			_g_vd.a = ComponentHolder_$Example_$Animal.__MAP.get(_g_vd.id);
			_g_vd.pos = ComponentHolder_$Example_$Position.__MAP.get(_g_vd.id);
			var _g_vd1;
			var _g_i1;
			var list1 = this.animals.entities;
			_g_i1 = -1;
			_g_vd1 = new ViewData_$Example_$Animal_$Example_$Position();
			while(++_g_i1 < list1.length) {
				_g_vd1.id = list1[_g_i1];
				_g_vd1.a = ComponentHolder_$Example_$Animal.__MAP.get(_g_vd1.id);
				_g_vd1.pos = ComponentHolder_$Example_$Position.__MAP.get(_g_vd1.id);
				if(_g_vd != _g_vd1 && this.samecell(_g_vd.pos,_g_vd1.pos)) {
					if(_g_vd.a == Animal.Tiger && _g_vd1.a == Animal.Rabbit) {
						del.push(_g_vd1.id);
					}
					if(_g_vd.a == Animal.Rabbit && _g_vd1.a == Animal.Rabbit) {
						if(Lambda.count(this.animals,function(a) {
							return a.a == Animal.Rabbit;
						}) < Example.RABBITS_POPULATION) {
							Example.rabbit(_g_vd.pos.x,_g_vd.pos.y);
						}
					}
				}
			}
		}
		var _g = 0;
		while(_g < del.length) {
			var id = del[_g];
			++_g;
			var _this = this.echo;
			if(_this.entitiesMap.exists(id)) {
				var _g_head = _this.views.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					val.removeIfMatch(id);
				}
				_this.entitiesMap.remove(id);
				_this.entities.remove(id);
			}
			ComponentHolder_$Example_$Animal.__MAP.remove(id);
			ComponentHolder_$Example_$Sprite.__MAP.remove(id);
			ComponentHolder_$Example_$Velocity.__MAP.remove(id);
			ComponentHolder_$Example_$Position.__MAP.remove(id);
		}
	}
	,samecell: function(pos1,pos2) {
		if((pos1.x | 0) == (pos2.x | 0)) {
			return (pos1.y | 0) == (pos2.y | 0);
		} else {
			return false;
		}
	}
	,activate: function(echo1) {
		if(!echo1.viewsMap.h.hasOwnProperty(4)) {
			echo1.addView(new View_$Example_$Animal_$Example_$Position());
		}
		this.animals = echo1.viewsMap.h[4];
		echo_System.prototype.activate.call(this,echo1);
	}
	,__class__: Interaction
});
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = it.iterator();
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = it.iterator();
		while(x.hasNext()) if(pred(x.next())) {
			++n;
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Std = function() { };
Std.__name__ = ["Std"];
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var Type = function() { };
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
var ViewData_$Example_$Animal_$Example_$Position = function() {
};
ViewData_$Example_$Animal_$Example_$Position.__name__ = ["ViewData_Example_Animal_Example_Position"];
ViewData_$Example_$Animal_$Example_$Position.prototype = {
	__class__: ViewData_$Example_$Animal_$Example_$Position
};
var ViewData_$Example_$Position_$Example_$Sprite_$Example_$Velocity = function() {
};
ViewData_$Example_$Position_$Example_$Sprite_$Example_$Velocity.__name__ = ["ViewData_Example_Position_Example_Sprite_Example_Velocity"];
ViewData_$Example_$Position_$Example_$Sprite_$Example_$Velocity.prototype = {
	__class__: ViewData_$Example_$Position_$Example_$Sprite_$Example_$Velocity
};
var ViewData_$Example_$Position_$Example_$Velocity = function() {
};
ViewData_$Example_$Position_$Example_$Velocity.__name__ = ["ViewData_Example_Position_Example_Velocity"];
ViewData_$Example_$Position_$Example_$Velocity.prototype = {
	__class__: ViewData_$Example_$Position_$Example_$Velocity
};
var ViewIterator_$ViewData_$Example_$Animal_$Example_$Position = function(list) {
	this.i = -1;
	this.list = list;
	this.vd = new ViewData_$Example_$Animal_$Example_$Position();
};
ViewIterator_$ViewData_$Example_$Animal_$Example_$Position.__name__ = ["ViewIterator_ViewData_Example_Animal_Example_Position"];
ViewIterator_$ViewData_$Example_$Animal_$Example_$Position.prototype = {
	hasNext: function() {
		return ++this.i < this.list.length;
	}
	,next: function() {
		this.vd.id = this.list[this.i];
		this.vd.a = ComponentHolder_$Example_$Animal.__MAP.h[this.vd.id];
		this.vd.pos = ComponentHolder_$Example_$Position.__MAP.h[this.vd.id];
		return this.vd;
	}
	,__class__: ViewIterator_$ViewData_$Example_$Animal_$Example_$Position
};
var echo_ViewBase = function() {
	this.entities = [];
	this.onRemoved = [];
	this.onAdded = [];
	this.__id = -1;
	this.entitiesMap = new haxe_ds_IntMap();
};
echo_ViewBase.__name__ = ["echo","ViewBase"];
echo_ViewBase.prototype = {
	activate: function(echo1) {
		this.echo = echo1;
		var _g_head = echo1.entities.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			this.addIfMatch(val);
		}
	}
	,test: function(id) {
		return false;
	}
	,addIfMatch: function(id) {
		if(!this.entitiesMap.exists(id) && this.test(id)) {
			this.entitiesMap.set(id,id);
			this.entities.push(id);
			var i = 0;
			var l = this.onAdded.length;
			while(i < l) {
				var listener = this.onAdded[i];
				if(listener != null) {
					listener(id);
					++i;
				} else {
					this.onAdded.splice(i,1);
					--l;
				}
			}
		}
	}
	,removeIfMatch: function(id) {
		if(this.entitiesMap.exists(id)) {
			var i = 0;
			var l = this.onRemoved.length;
			while(i < l) {
				var listener = this.onRemoved[i];
				if(listener != null) {
					listener(id);
					++i;
				} else {
					this.onRemoved.splice(i,1);
					--l;
				}
			}
			HxOverrides.remove(this.entities,id);
			this.entitiesMap.remove(id);
		}
	}
	,__class__: echo_ViewBase
};
var View_$Example_$Animal_$Example_$Position = function() {
	echo_ViewBase.call(this);
	this.__id = 4;
};
View_$Example_$Animal_$Example_$Position.__name__ = ["View_Example_Animal_Example_Position"];
View_$Example_$Animal_$Example_$Position.__super__ = echo_ViewBase;
View_$Example_$Animal_$Example_$Position.prototype = $extend(echo_ViewBase.prototype,{
	iterator: function() {
		return new ViewIterator_$ViewData_$Example_$Animal_$Example_$Position(this.entities);
	}
	,test: function(id) {
		if(ComponentHolder_$Example_$Animal.__MAP.h.hasOwnProperty(id)) {
			return ComponentHolder_$Example_$Position.__MAP.h.hasOwnProperty(id);
		} else {
			return false;
		}
	}
	,__class__: View_$Example_$Animal_$Example_$Position
});
var View_$Example_$Position_$Example_$Sprite = function() {
	echo_ViewBase.call(this);
	this.__id = 2;
};
View_$Example_$Position_$Example_$Sprite.__name__ = ["View_Example_Position_Example_Sprite"];
View_$Example_$Position_$Example_$Sprite.__super__ = echo_ViewBase;
View_$Example_$Position_$Example_$Sprite.prototype = $extend(echo_ViewBase.prototype,{
	test: function(id) {
		if(ComponentHolder_$Example_$Position.__MAP.h.hasOwnProperty(id)) {
			return ComponentHolder_$Example_$Sprite.__MAP.h.hasOwnProperty(id);
		} else {
			return false;
		}
	}
	,__class__: View_$Example_$Position_$Example_$Sprite
});
var View_$Example_$Position_$Example_$Sprite_$Example_$Velocity = function() {
	echo_ViewBase.call(this);
	this.__id = 3;
};
View_$Example_$Position_$Example_$Sprite_$Example_$Velocity.__name__ = ["View_Example_Position_Example_Sprite_Example_Velocity"];
View_$Example_$Position_$Example_$Sprite_$Example_$Velocity.__super__ = echo_ViewBase;
View_$Example_$Position_$Example_$Sprite_$Example_$Velocity.prototype = $extend(echo_ViewBase.prototype,{
	test: function(id) {
		if(ComponentHolder_$Example_$Position.__MAP.h.hasOwnProperty(id) && ComponentHolder_$Example_$Sprite.__MAP.h.hasOwnProperty(id)) {
			return ComponentHolder_$Example_$Velocity.__MAP.h.hasOwnProperty(id);
		} else {
			return false;
		}
	}
	,__class__: View_$Example_$Position_$Example_$Sprite_$Example_$Velocity
});
var View_$Example_$Position_$Example_$Velocity = function() {
	echo_ViewBase.call(this);
	this.__id = 1;
};
View_$Example_$Position_$Example_$Velocity.__name__ = ["View_Example_Position_Example_Velocity"];
View_$Example_$Position_$Example_$Velocity.__super__ = echo_ViewBase;
View_$Example_$Position_$Example_$Velocity.prototype = $extend(echo_ViewBase.prototype,{
	test: function(id) {
		if(ComponentHolder_$Example_$Position.__MAP.h.hasOwnProperty(id)) {
			return ComponentHolder_$Example_$Velocity.__MAP.h.hasOwnProperty(id);
		} else {
			return false;
		}
	}
	,__class__: View_$Example_$Position_$Example_$Velocity
});
var echo_Echo = function() {
	this.timestamp = new Date().getTime() / 1000;
	this.updateStats = new haxe_ds_IntMap();
	this.systems = new List();
	this.views = new List();
	this.entities = new List();
	this.systemsMap = new haxe_ds_IntMap();
	this.viewsMap = new haxe_ds_IntMap();
	this.entitiesMap = new haxe_ds_IntMap();
};
echo_Echo.__name__ = ["echo","Echo"];
echo_Echo.prototype = {
	update: function(dt) {
		var this1 = this.updateStats;
		var value = (new Date().getTime() / 1000 - this.timestamp) * 1000 | 0;
		this1.h[-10] = value;
		var updateTimestamp = new Date().getTime() / 1000;
		var _g_head = this.systems.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var s = val;
			this.timestamp = new Date().getTime() / 1000;
			s.update(dt);
			var this2 = this.updateStats;
			var key = s.__id;
			var value1 = (new Date().getTime() / 1000 - this.timestamp) * 1000 | 0;
			this2.h[key] = value1;
		}
		this.timestamp = new Date().getTime() / 1000;
		this.updateStats.h[-100] = (this.timestamp - updateTimestamp) * 1000 | 0;
	}
	,addSystem: function(s) {
		if(!this.systemsMap.h.hasOwnProperty(s.__id)) {
			this.systemsMap.h[s.__id] = s;
			this.systems.add(s);
			s.activate(this);
		}
	}
	,addView: function(v) {
		if(!this.viewsMap.h.hasOwnProperty(v.__id)) {
			this.viewsMap.h[v.__id] = v;
			this.views.add(v);
			v.activate(this);
		}
	}
	,id: function() {
		var id = ++echo_Echo.__IDSEQUENCE;
		this.entitiesMap.h[id] = id;
		this.entities.add(id);
		return id;
	}
	,__class__: echo_Echo
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,__class__: haxe_ds_IntMap
};
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
ComponentHolder_$Example_$Animal.__MAP = new haxe_ds_IntMap();
ComponentHolder_$Example_$Position.__MAP = new haxe_ds_IntMap();
ComponentHolder_$Example_$Sprite.__MAP = new haxe_ds_IntMap();
ComponentHolder_$Example_$Velocity.__MAP = new haxe_ds_IntMap();
Example.RABBITS_POPULATION = 15;
Example.MAX_WIDTH = 60;
Example.MAX_HEIGHT = 40;
Render.__meta__ = { fields : { appendVisual : { onadded : null}, removeVisual : { onremoved : null}, updateDynamicVisual : { update : null}}};
echo_Echo.__IDSEQUENCE = 0;
js_Boot.__toStr = ({ }).toString;
Example.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
